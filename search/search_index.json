{"config":{"lang":["en","zh"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"LeanUp","text":"<p>A Python package for managing Lean mathematical proof language environments.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>\ud83d\udd27 elan Management: Install and manage the Lean toolchain manager elan with a single command</li> <li>\ud83d\udce6 Repository Management: Install and manage Lean repositories with interactive configuration</li> <li>\ud83c\udf0d Cross-platform Support: Works on Linux, macOS, and Windows</li> <li>\ud83d\udce6 Easy Installation: Quick setup via <code>pip install -e /path/to/LeanUp</code></li> <li>\ud83d\udd04 Command Proxy: Transparent proxy for all elan commands with streaming output support</li> <li>\ud83d\udcca Status Monitoring: Real-time view of Lean environment status and installed toolchains</li> <li>\u2699\ufe0f Configuration Management: Flexible configuration system with interactive setup</li> </ul>"},{"location":"#quick-start","title":"Quick Start","text":"<p>Check the Quick Start guide to begin using LeanUp.</p>"},{"location":"#command-line-interface","title":"Command Line Interface","text":"<p>LeanUp provides a comprehensive CLI with the following commands:</p>"},{"location":"#main-commands","title":"Main Commands","text":"<ul> <li><code>leanup init</code> - Initialize LeanUp configuration</li> <li><code>leanup install [version]</code> - Install elan toolchain manager</li> <li><code>leanup status</code> - Show current status and configuration</li> <li><code>leanup elan &lt;args&gt;</code> - Proxy elan commands</li> </ul>"},{"location":"#repository-management","title":"Repository Management","text":"<ul> <li><code>leanup repo install &lt;repository&gt;</code> - Install Lean repositories</li> <li><code>leanup repo list</code> - List installed repositories</li> </ul>"},{"location":"#modules","title":"Modules","text":""},{"location":"#cli-module","title":"CLI Module","text":"<p>The <code>leanup.cli</code> module provides the command-line interface:</p> <ul> <li>Main CLI: Core commands for elan management and status monitoring</li> <li>Repository CLI: Commands for managing Lean repositories</li> <li>Configuration: Centralized configuration management</li> </ul>"},{"location":"#utils-module","title":"Utils Module","text":"<p>The <code>leanup.utils</code> module provides utility functions for the package:</p> <ul> <li><code>execute_command</code>: Execute shell commands with proper error handling and cross-platform support</li> <li><code>setup_logger</code>: Configure a logger with customizable output formats and color support</li> </ul>"},{"location":"#repo-module","title":"Repo Module","text":"<p>The <code>leanup.repo</code> module provides functionality for repository management:</p> <ul> <li><code>RepoManager</code>: A class for managing directory operations and git functionality</li> <li>File operations (read, write, edit)</li> <li>Command execution</li> <li> <p>Git operations (clone, status, add, commit, pull, push)</p> </li> <li> <p><code>ElanManager</code>: A class for managing the Lean toolchain manager elan</p> </li> <li>Automatic elan installation and version management</li> <li>Cross-platform installer download and execution</li> <li>Command proxy with streaming output support</li> <li>Toolchain management and status monitoring</li> </ul>"},{"location":"#architecture","title":"Architecture","text":"<p>LeanUp is built with a modular architecture:</p> <ul> <li>CLI layer: Command-line interface for user interactions</li> <li>Utils layer: Core utility functions for command execution and logging</li> <li>Repo layer: High-level abstractions for repository and toolchain management</li> </ul> <p>The package uses the <code>execute_command</code> utility function from the utils module for all command execution, ensuring consistent behavior across different platforms and components.</p>"},{"location":"api-reference/","title":"API Reference","text":""},{"location":"api-reference/#leanupcliconfig","title":"leanup.cli.config","text":""},{"location":"api-reference/#configmanager","title":"ConfigManager","text":"<p>A class for managing LeanUp configuration.</p>"},{"location":"api-reference/#methods","title":"Methods","text":""},{"location":"api-reference/#__init__config_dir-optionalpath-none","title":"<code>__init__(config_dir: Optional[Path] = None)</code>","text":"<p>Initialize ConfigManager with optional config directory.</p>"},{"location":"api-reference/#config_exists-bool","title":"<code>config_exists() -&gt; bool</code>","text":"<p>Check if configuration file exists.</p>"},{"location":"api-reference/#init_config-bool","title":"<code>init_config() -&gt; bool</code>","text":"<p>Initialize configuration file with default values.</p>"},{"location":"api-reference/#load_config-dictstr-any","title":"<code>load_config() -&gt; Dict[str, Any]</code>","text":"<p>Load configuration from file.</p>"},{"location":"api-reference/#save_configconfig-dictstr-any-bool","title":"<code>save_config(config: Dict[str, Any]) -&gt; bool</code>","text":"<p>Save configuration to file.</p>"},{"location":"api-reference/#get_cache_dir-path","title":"<code>get_cache_dir() -&gt; Path</code>","text":"<p>Get cache directory path.</p>"},{"location":"api-reference/#get_default_source-str","title":"<code>get_default_source() -&gt; str</code>","text":"<p>Get default repository source URL.</p>"},{"location":"api-reference/#leanuputilsbasic","title":"leanup.utils.basic","text":""},{"location":"api-reference/#execute_command","title":"execute_command","text":"<pre><code>def execute_command(\n    command: list,\n    cwd: Optional[str] = None,\n    text: bool = True,\n    input: Union[str, None] = None,\n    capture_output: bool = True,\n    timeout: Optional[int] = None\n) -&gt; Tuple[str, str, int]\n</code></pre> <p>Execute command with subprocess.Popen.</p> <p>Parameters: - <code>command</code>: List of command arguments - <code>cwd</code>: Working directory path - <code>text</code>: Whether to return output as text - <code>input</code>: Input string to pass to command - <code>capture_output</code>: Whether to capture stdout/stderr - <code>timeout</code>: Maximum execution time in seconds</p> <p>Returns: Tuple containing stdout, stderr, and return code</p>"},{"location":"api-reference/#leanuprepoelan","title":"leanup.repo.elan","text":""},{"location":"api-reference/#elanmanager","title":"ElanManager","text":"<p>A class for managing the Lean toolchain manager elan.</p>"},{"location":"api-reference/#methods_1","title":"Methods","text":""},{"location":"api-reference/#__init__","title":"<code>__init__()</code>","text":"<p>Initialize ElanManager with elan home directory.</p>"},{"location":"api-reference/#get_elan_executable-optionalpath","title":"<code>get_elan_executable() -&gt; Optional[Path]</code>","text":"<p>Get elan executable file path.</p>"},{"location":"api-reference/#is_elan_installed-bool","title":"<code>is_elan_installed() -&gt; bool</code>","text":"<p>Check if elan is installed.</p>"},{"location":"api-reference/#get_elan_version-optionalstr","title":"<code>get_elan_version() -&gt; Optional[str]</code>","text":"<p>Get installed elan version.</p>"},{"location":"api-reference/#install_elanversion-optionalstr-none-force-bool-false-bool","title":"<code>install_elan(version: Optional[str] = None, force: bool = False) -&gt; bool</code>","text":"<p>Install elan with optional version specification.</p>"},{"location":"api-reference/#proxy_elan_commandargs-liststr-int","title":"<code>proxy_elan_command(args: List[str]) -&gt; int</code>","text":"<p>Proxy execute elan command with streaming output support.</p>"},{"location":"api-reference/#get_installed_toolchains-liststr","title":"<code>get_installed_toolchains() -&gt; List[str]</code>","text":"<p>Get list of installed toolchains.</p>"},{"location":"api-reference/#get_status_info-dictstr-any","title":"<code>get_status_info() -&gt; Dict[str, any]</code>","text":"<p>Get comprehensive elan status information.</p>"},{"location":"api-reference/#leanuprepomanager","title":"leanup.repo.manager","text":""},{"location":"api-reference/#repomanager","title":"RepoManager","text":"<p>Base class for managing directory operations and git functionality.</p>"},{"location":"api-reference/#leanrepo","title":"LeanRepo","text":"<p>A specialized repository manager for Lean projects, extending RepoManager with lake support.</p>"},{"location":"api-reference/#methods_2","title":"Methods","text":""},{"location":"api-reference/#__init__cwd-unionstr-path","title":"<code>__init__(cwd: Union[str, Path])</code>","text":"<p>Initialize LeanRepo with working directory.</p>"},{"location":"api-reference/#get_lean_toolchain-optionalstr","title":"<code>get_lean_toolchain() -&gt; Optional[str]</code>","text":"<p>Read lean-toolchain file to get Lean version.</p> <p>Returns: Lean version string if found, None otherwise</p>"},{"location":"api-reference/#parse_dependencies-dictstr-any","title":"<code>parse_dependencies() -&gt; Dict[str, Any]</code>","text":"<p>Parse dependencies from lakefile.toml or lakefile.lean.</p> <p>Returns: Dictionary containing parsed dependencies</p>"},{"location":"api-reference/#lakeargs-liststr-tuplestr-str-int","title":"<code>lake(args: List[str]) -&gt; Tuple[str, str, int]</code>","text":"<p>Execute lake command with given arguments.</p> <p>Parameters: - <code>args</code>: List of lake command arguments</p> <p>Returns: Tuple containing stdout, stderr, and return code</p>"},{"location":"api-reference/#lake_buildtarget-optionalstr-none-tuplestr-str-int","title":"<code>lake_build(target: Optional[str] = None) -&gt; Tuple[str, str, int]</code>","text":"<p>Build the Lean project using lake.</p> <p>Parameters: - <code>target</code>: Optional build target</p>"},{"location":"api-reference/#lake_update-tuplestr-str-int","title":"<code>lake_update() -&gt; Tuple[str, str, int]</code>","text":"<p>Update dependencies using lake.</p>"},{"location":"api-reference/#lake_env_leanfilepath-unionstr-path-json-bool-true-tuplestr-str-int","title":"<code>lake_env_lean(filepath: Union[str, Path], json: bool = True) -&gt; Tuple[str, str, int]</code>","text":"<p>Run lean file with lake environment.</p> <p>Parameters: - <code>filepath</code>: Path to the Lean file - <code>json</code>: Whether to return JSON output (default: True)</p>"},{"location":"api-reference/#lake_clean-tuplestr-str-int","title":"<code>lake_clean() -&gt; Tuple[str, str, int]</code>","text":"<p>Clean build artifacts using lake.</p>"},{"location":"api-reference/#lake_test-tuplestr-str-int","title":"<code>lake_test() -&gt; Tuple[str, str, int]</code>","text":"<p>Run tests using lake.</p>"},{"location":"api-reference/#get_project_info-dictstr-any","title":"<code>get_project_info() -&gt; Dict[str, Any]</code>","text":"<p>Get comprehensive project information including Lean version, dependencies, and file status.</p>"},{"location":"getting-started/quickstart/","title":"Quick Start","text":""},{"location":"getting-started/quickstart/#installation","title":"Installation","text":"<pre><code># Install from source\npip install -e /path/to/LeanUp\n\n# Or clone the repository and install\ngit clone https://github.com/Lean-zh/LeanUp.git\ncd LeanUp\npip install -e .\n</code></pre>"},{"location":"getting-started/quickstart/#basic-usage","title":"Basic Usage","text":""},{"location":"getting-started/quickstart/#initialize-configuration","title":"Initialize Configuration","text":"<pre><code># View help\nleanup --help\n\n# Install elan and initialize configuration\nleanup init\n\n# Install latest stable version\nleanup install\n\n# View current status\nleanup status\n</code></pre>"},{"location":"getting-started/quickstart/#install-elan","title":"Install elan","text":"<pre><code># Install latest version of elan\nleanup install\n\n# Install specific version\nleanup install v1.4.2\n\n# Force reinstall\nleanup install --force\n</code></pre>"},{"location":"getting-started/quickstart/#manage-toolchains","title":"Manage Toolchains","text":"<pre><code># Proxy execute elan commands\nleanup elan --help\nleanup elan toolchain list\nleanup elan toolchain install stable\nleanup elan default stable\n</code></pre>"},{"location":"getting-started/quickstart/#repository-management","title":"Repository Management","text":"<pre><code># Install a repository\nleanup repo install mathlib4\n\n# Install with interactive configuration\nleanup repo install mathlib4 --interactive\n\n# Install from specific source\nleanup repo install mathlib4 --source github\n\n# Install from URL\nleanup repo install --url https://github.com/leanprover-community/mathlib4.git\n\n# List installed repositories\nleanup repo list\n</code></pre>"},{"location":"getting-started/quickstart/#using-the-repomanager","title":"Using the RepoManager","text":"<p>The <code>RepoManager</code> class provides functionality for managing directories and git repositories:</p> <pre><code>from leanup.repo import RepoManager\n\n# Initialize a directory manager\nrepo = RepoManager(\"/path/to/your/directory\")\n\n# Check if it's a git repository\nif repo.is_gitrepo:\n    print(\"This is a git repository\")\n    status = repo.git_status()\n    print(f\"Current branch: {status['branch']}\")\nelse:\n    print(\"This is not a git repository\")\n\n# Clone a repository\nrepo.clone_from(\"https://github.com/user/repo.git\")\n\n# Read a file\ncontent = repo.read_file(\"README.md\")\n\n# Write a file\nrepo.write_file(\"test.txt\", \"Hello World\")\n\n# Execute a command\nresult = repo.execute_command([\"ls\", \"-la\"])\n</code></pre>"},{"location":"getting-started/quickstart/#using-leanrepo","title":"Using LeanRepo","text":"<p>The <code>LeanRepo</code> class is specialized for Lean project management:</p> <pre><code>from leanup.repo import LeanRepo\n\n# Initialize Lean project manager\nlean_repo = LeanRepo(\"/path/to/lean/project\")\n\n# Get Lean toolchain version\ntoolchain = lean_repo.get_lean_toolchain()\nprint(f\"Lean toolchain: {toolchain}\")\n\n# Execute lake commands\nlean_repo.lake_update()\nlean_repo.lake_build()\n\n# Execute custom lake commands\nresult = lean_repo.lake([\"build\", \"MyPackage\"])\n</code></pre>"},{"location":"getting-started/quickstart/#configuration","title":"Configuration","text":"<p>LeanUp uses a configuration file at <code>~/.leanup/config.toml</code>. The configuration includes:</p> <ul> <li>Repository settings (default source, cache directory)</li> <li>elan settings (auto-installation)</li> <li>Interactive installation preferences</li> </ul> <p>You can modify the configuration manually or use the interactive installation mode to set preferences.</p>"},{"location":"zh/","title":"LeanUp","text":"<p>\u4e00\u4e2a\u7528\u4e8e\u7ba1\u7406 Lean \u6570\u5b66\u8bc1\u660e\u8bed\u8a00\u73af\u5883\u7684 Python \u5de5\u5177\u3002</p>"},{"location":"zh/#_1","title":"\u529f\u80fd\u7279\u6027","text":"<ul> <li>\ud83d\udd27 elan \u7ba1\u7406: \u4e00\u952e\u5b89\u88c5\u548c\u7ba1\u7406 Lean \u5de5\u5177\u94fe\u7ba1\u7406\u5668 elan</li> <li>\ud83d\udce6 \u4ed3\u5e93\u7ba1\u7406: \u901a\u8fc7\u4ea4\u4e92\u5f0f\u914d\u7f6e\u5b89\u88c5\u548c\u7ba1\u7406 Lean \u4ed3\u5e93</li> <li>\ud83c\udf0d \u8de8\u5e73\u53f0\u652f\u6301: \u652f\u6301 Linux\u3001macOS \u548c Windows</li> <li>\ud83d\udce6 \u7b80\u5355\u6613\u7528: \u901a\u8fc7 <code>pip install -e /path/to/LeanUp</code> \u5feb\u901f\u5b89\u88c5</li> <li>\ud83d\udd04 \u547d\u4ee4\u4ee3\u7406: \u900f\u660e\u4ee3\u7406\u6240\u6709 elan \u547d\u4ee4\uff0c\u652f\u6301\u6d41\u5f0f\u8f93\u51fa</li> <li>\ud83d\udcca \u72b6\u6001\u76d1\u63a7: \u5b9e\u65f6\u67e5\u770b Lean \u73af\u5883\u72b6\u6001\u548c\u5df2\u5b89\u88c5\u5de5\u5177\u94fe</li> <li>\u2699\ufe0f \u914d\u7f6e\u7ba1\u7406: \u7075\u6d3b\u7684\u914d\u7f6e\u7cfb\u7edf\uff0c\u652f\u6301\u4ea4\u4e92\u5f0f\u8bbe\u7f6e</li> </ul>"},{"location":"zh/#_2","title":"\u5feb\u901f\u5f00\u59cb","text":"<p>\u67e5\u770b\u5feb\u901f\u5f00\u59cb\u6307\u5357\uff0c\u5f00\u59cb\u4f7f\u7528 LeanUp\u3002</p>"},{"location":"zh/#_3","title":"\u547d\u4ee4\u884c\u754c\u9762","text":"<p>LeanUp \u63d0\u4f9b\u4e86\u5b8c\u6574\u7684 CLI\uff0c\u5305\u542b\u4ee5\u4e0b\u547d\u4ee4\uff1a</p>"},{"location":"zh/#_4","title":"\u4e3b\u8981\u547d\u4ee4","text":"<ul> <li><code>leanup init</code> - \u521d\u59cb\u5316 LeanUp \u914d\u7f6e</li> <li><code>leanup install [version]</code> - \u5b89\u88c5 elan \u5de5\u5177\u94fe\u7ba1\u7406\u5668</li> <li><code>leanup status</code> - \u663e\u793a\u5f53\u524d\u72b6\u6001\u548c\u914d\u7f6e</li> <li><code>leanup elan &lt;args&gt;</code> - \u4ee3\u7406 elan \u547d\u4ee4</li> </ul>"},{"location":"zh/#_5","title":"\u4ed3\u5e93\u7ba1\u7406","text":"<ul> <li><code>leanup repo install &lt;repository&gt;</code> - \u5b89\u88c5 Lean \u4ed3\u5e93</li> <li><code>leanup repo list</code> - \u5217\u51fa\u5df2\u5b89\u88c5\u7684\u4ed3\u5e93</li> </ul>"},{"location":"zh/#_6","title":"\u6a21\u5757","text":""},{"location":"zh/#cli","title":"CLI \u6a21\u5757","text":"<p><code>leanup.cli</code> \u6a21\u5757\u63d0\u4f9b\u4e86\u547d\u4ee4\u884c\u754c\u9762\uff1a</p> <ul> <li>\u4e3b CLI: elan \u7ba1\u7406\u548c\u72b6\u6001\u76d1\u63a7\u7684\u6838\u5fc3\u547d\u4ee4</li> <li>\u4ed3\u5e93 CLI: \u7ba1\u7406 Lean \u4ed3\u5e93\u7684\u547d\u4ee4</li> <li>\u914d\u7f6e: \u96c6\u4e2d\u5316\u914d\u7f6e\u7ba1\u7406</li> </ul>"},{"location":"zh/#utils","title":"Utils \u6a21\u5757","text":"<p><code>leanup.utils</code> \u6a21\u5757\u63d0\u4f9b\u4e86\u5305\u7684\u5b9e\u7528\u51fd\u6570\uff1a</p> <ul> <li><code>execute_command</code>: \u6267\u884c shell \u547d\u4ee4\uff0c\u5177\u6709\u9002\u5f53\u7684\u9519\u8bef\u5904\u7406\u548c\u8de8\u5e73\u53f0\u652f\u6301</li> <li><code>setup_logger</code>: \u914d\u7f6e\u65e5\u5fd7\u8bb0\u5f55\u5668\uff0c\u652f\u6301\u81ea\u5b9a\u4e49\u8f93\u51fa\u683c\u5f0f\u548c\u989c\u8272</li> </ul>"},{"location":"zh/#repo","title":"Repo \u6a21\u5757","text":"<p><code>leanup.repo</code> \u6a21\u5757\u63d0\u4f9b\u4e86\u4ed3\u5e93\u7ba1\u7406\u529f\u80fd\uff1a</p> <ul> <li><code>RepoManager</code>: \u7528\u4e8e\u7ba1\u7406\u76ee\u5f55\u64cd\u4f5c\u548c git \u529f\u80fd\u7684\u7c7b</li> <li>\u6587\u4ef6\u64cd\u4f5c\uff08\u8bfb\u53d6\u3001\u5199\u5165\u3001\u7f16\u8f91\uff09</li> <li>\u547d\u4ee4\u6267\u884c</li> <li>Git \u64cd\u4f5c\uff08\u514b\u9686\u3001\u72b6\u6001\u3001\u6dfb\u52a0\u3001\u63d0\u4ea4\u3001\u62c9\u53d6\u3001\u63a8\u9001\uff09</li> <li><code>LeanRepo</code>: \u4e13\u95e8\u7528\u4e8e Lean \u9879\u76ee\u7684\u4ed3\u5e93\u7ba1\u7406\u5668\uff0c\u6269\u5c55\u4e86 RepoManager \u5e76\u652f\u6301 lake \u529f\u80fd</li> <li><code>ElanManager</code>: \u7ba1\u7406 Lean \u5de5\u5177\u94fe\u7ba1\u7406\u5668 elan \u7684\u7c7b</li> </ul>"},{"location":"zh/api-reference/","title":"API \u53c2\u8003\u6587\u6863","text":""},{"location":"zh/api-reference/#execute_command","title":"execute_command","text":"<pre><code>def execute_command(\n    command: list,\n    cwd: Optional[str] = None,\n    text: bool = True,\n    input: Union[str, None] = None,\n    capture_output: bool = True,\n    timeout: Optional[int] = None\n) -&gt; Tuple[str, str, int]\n</code></pre> <p>\u4f7f\u7528 subprocess.Popen \u6267\u884c\u547d\u4ee4\u3002</p> <p>\u53c2\u6570\uff1a - <code>command</code>: \u547d\u4ee4\u53c2\u6570\u5217\u8868 - <code>cwd</code>: \u5de5\u4f5c\u76ee\u5f55\u8def\u5f84 - <code>text</code>: \u662f\u5426\u4ee5\u6587\u672c\u5f62\u5f0f\u8fd4\u56de\u8f93\u51fa - <code>input</code>: \u4f20\u9012\u7ed9\u547d\u4ee4\u7684\u8f93\u5165\u5b57\u7b26\u4e32 - <code>capture_output</code>: \u662f\u5426\u6355\u83b7 stdout/stderr - <code>timeout</code>: \u6700\u5927\u6267\u884c\u65f6\u95f4\uff08\u79d2\uff09</p> <p>\u8fd4\u56de\u503c\uff1a \u5305\u542b stdout\u3001stderr \u548c\u8fd4\u56de\u7801\u7684\u5143\u7ec4</p>"},{"location":"zh/api-reference/#elanmanager","title":"ElanManager","text":"<p>\u7528\u4e8e\u7ba1\u7406 Lean \u5de5\u5177\u94fe\u7ba1\u7406\u5668 elan \u7684\u7c7b\u3002</p>"},{"location":"zh/api-reference/#_1","title":"\u65b9\u6cd5","text":""},{"location":"zh/api-reference/#__init__","title":"<code>__init__()</code>","text":"<p>\u4f7f\u7528 elan \u4e3b\u76ee\u5f55\u521d\u59cb\u5316 ElanManager\u3002</p>"},{"location":"zh/api-reference/#get_elan_executable-optionalpath","title":"<code>get_elan_executable() -&gt; Optional[Path]</code>","text":"<p>\u83b7\u53d6 elan \u53ef\u6267\u884c\u6587\u4ef6\u8def\u5f84\u3002</p>"},{"location":"zh/api-reference/#is_elan_installed-bool","title":"<code>is_elan_installed() -&gt; bool</code>","text":"<p>\u68c0\u67e5 elan \u662f\u5426\u5df2\u5b89\u88c5\u3002</p>"},{"location":"zh/api-reference/#get_elan_version-optionalstr","title":"<code>get_elan_version() -&gt; Optional[str]</code>","text":"<p>\u83b7\u53d6\u5df2\u5b89\u88c5\u7684 elan \u7248\u672c\u3002</p>"},{"location":"zh/api-reference/#install_elanversion-optionalstr-none-force-bool-false-bool","title":"<code>install_elan(version: Optional[str] = None, force: bool = False) -&gt; bool</code>","text":"<p>\u5b89\u88c5 elan\uff0c\u53ef\u9009\u62e9\u6307\u5b9a\u7248\u672c\u3002</p>"},{"location":"zh/api-reference/#proxy_elan_commandargs-liststr-int","title":"<code>proxy_elan_command(args: List[str]) -&gt; int</code>","text":"<p>\u4ee3\u7406\u6267\u884c elan \u547d\u4ee4\uff0c\u652f\u6301\u6d41\u5f0f\u8f93\u51fa\u3002</p>"},{"location":"zh/api-reference/#get_installed_toolchains-liststr","title":"<code>get_installed_toolchains() -&gt; List[str]</code>","text":"<p>\u83b7\u53d6\u5df2\u5b89\u88c5\u5de5\u5177\u94fe\u5217\u8868\u3002</p>"},{"location":"zh/api-reference/#get_status_info-dictstr-any","title":"<code>get_status_info() -&gt; Dict[str, any]</code>","text":"<p>\u83b7\u53d6 elan \u7684\u7efc\u5408\u72b6\u6001\u4fe1\u606f\u3002</p>"},{"location":"zh/api-reference/#repomanager","title":"RepoManager","text":"<p>\u7528\u4e8e\u7ba1\u7406\u76ee\u5f55\u64cd\u4f5c\u548c git \u529f\u80fd\u7684\u57fa\u7c7b\u3002</p>"},{"location":"zh/api-reference/#leanrepo","title":"LeanRepo","text":"<p>\u4e13\u95e8\u7528\u4e8e Lean \u9879\u76ee\u7684\u4ed3\u5e93\u7ba1\u7406\u5668\uff0c\u6269\u5c55\u4e86 RepoManager \u5e76\u652f\u6301 lake \u529f\u80fd\u3002</p>"},{"location":"zh/api-reference/#_2","title":"\u65b9\u6cd5","text":""},{"location":"zh/api-reference/#__init__cwd-unionstr-path","title":"<code>__init__(cwd: Union[str, Path])</code>","text":"<p>\u4f7f\u7528\u5de5\u4f5c\u76ee\u5f55\u521d\u59cb\u5316 LeanRepo\u3002</p>"},{"location":"zh/api-reference/#get_lean_toolchain-optionalstr","title":"<code>get_lean_toolchain() -&gt; Optional[str]</code>","text":"<p>\u8bfb\u53d6 lean-toolchain \u6587\u4ef6\u83b7\u53d6 Lean \u7248\u672c\u3002</p> <p>\u8fd4\u56de\u503c\uff1a \u5982\u679c\u627e\u5230\u5219\u8fd4\u56de Lean \u7248\u672c\u5b57\u7b26\u4e32\uff0c\u5426\u5219\u8fd4\u56de None</p>"},{"location":"zh/api-reference/#parse_dependencies-dictstr-any","title":"<code>parse_dependencies() -&gt; Dict[str, Any]</code>","text":"<p>\u4ece lakefile.toml \u6216 lakefile.lean \u89e3\u6790\u4f9d\u8d56\u3002</p> <p>\u8fd4\u56de\u503c\uff1a \u5305\u542b\u89e3\u6790\u4f9d\u8d56\u7684\u5b57\u5178</p>"},{"location":"zh/api-reference/#lakeargs-liststr-tuplestr-str-int","title":"<code>lake(args: List[str]) -&gt; Tuple[str, str, int]</code>","text":"<p>\u4f7f\u7528\u7ed9\u5b9a\u53c2\u6570\u6267\u884c lake \u547d\u4ee4\u3002</p> <p>\u53c2\u6570\uff1a - <code>args</code>: lake \u547d\u4ee4\u53c2\u6570\u5217\u8868</p> <p>\u8fd4\u56de\u503c\uff1a \u5305\u542b stdout\u3001stderr \u548c\u8fd4\u56de\u7801\u7684\u5143\u7ec4</p>"},{"location":"zh/api-reference/#lake_buildtarget-optionalstr-none-tuplestr-str-int","title":"<code>lake_build(target: Optional[str] = None) -&gt; Tuple[str, str, int]</code>","text":"<p>\u4f7f\u7528 lake \u6784\u5efa Lean \u9879\u76ee\u3002</p> <p>\u53c2\u6570\uff1a - <code>target</code>: \u53ef\u9009\u7684\u6784\u5efa\u76ee\u6807</p>"},{"location":"zh/api-reference/#lake_update-tuplestr-str-int","title":"<code>lake_update() -&gt; Tuple[str, str, int]</code>","text":"<p>\u4f7f\u7528 lake \u66f4\u65b0\u4f9d\u8d56\u3002</p>"},{"location":"zh/api-reference/#lake_env_leanfilepath-unionstr-path-json-bool-true-tuplestr-str-int","title":"<code>lake_env_lean(filepath: Union[str, Path], json: bool = True) -&gt; Tuple[str, str, int]</code>","text":"<p>\u5728 lake \u73af\u5883\u4e2d\u8fd0\u884c lean \u6587\u4ef6\u3002</p> <p>\u53c2\u6570\uff1a - <code>filepath</code>: Lean \u6587\u4ef6\u8def\u5f84 - <code>json</code>: \u662f\u5426\u8fd4\u56de JSON \u683c\u5f0f\u8f93\u51fa\uff08\u9ed8\u8ba4\uff1aTrue\uff09</p>"},{"location":"zh/api-reference/#lake_clean-tuplestr-str-int","title":"<code>lake_clean() -&gt; Tuple[str, str, int]</code>","text":"<p>\u4f7f\u7528 lake \u6e05\u7406\u6784\u5efa\u4ea7\u7269\u3002</p>"},{"location":"zh/api-reference/#lake_test-tuplestr-str-int","title":"<code>lake_test() -&gt; Tuple[str, str, int]</code>","text":"<p>\u4f7f\u7528 lake \u8fd0\u884c\u6d4b\u8bd5\u3002</p>"},{"location":"zh/api-reference/#get_project_info-dictstr-any","title":"<code>get_project_info() -&gt; Dict[str, Any]</code>","text":"<p>\u83b7\u53d6\u9879\u76ee\u7684\u7efc\u5408\u4fe1\u606f\uff0c\u5305\u62ec Lean \u7248\u672c\u3001\u4f9d\u8d56\u548c\u6587\u4ef6\u72b6\u6001\u3002</p>"},{"location":"zh/getting-started/quickstart/","title":"\u5feb\u901f\u5f00\u59cb","text":""},{"location":"zh/getting-started/quickstart/#_2","title":"\u5b89\u88c5","text":"<pre><code># \u4ece\u6e90\u7801\u5b89\u88c5\npip install -e /path/to/LeanUp\n\n# \u6216\u8005\u514b\u9686\u4ed3\u5e93\u540e\u5b89\u88c5\ngit clone https://github.com/Lean-zh/LeanUp.git\ncd LeanUp\npip install -e .\n</code></pre>"},{"location":"zh/getting-started/quickstart/#_3","title":"\u57fa\u7840\u4f7f\u7528","text":""},{"location":"zh/getting-started/quickstart/#_4","title":"\u521d\u59cb\u5316\u914d\u7f6e","text":"<pre><code># \u67e5\u770b\u5e2e\u52a9\nleanup --help\n\n# \u5b89\u88c5 elan \u5e76\u521d\u59cb\u5316\u914d\u7f6e\nleanup init\n\n# \u5b89\u88c5\u6700\u65b0\u7a33\u5b9a\u7248\u672c\nleanup install\n\n# \u67e5\u770b\u5f53\u524d\u72b6\u6001\nleanup status\n</code></pre>"},{"location":"zh/getting-started/quickstart/#elan","title":"\u5b89\u88c5 elan","text":"<pre><code># \u5b89\u88c5\u6700\u65b0\u7248\u672c\u7684 elan\nleanup install\n\n# \u5b89\u88c5\u7279\u5b9a\u7248\u672c\nleanup install v1.4.2\n\n# \u5f3a\u5236\u91cd\u65b0\u5b89\u88c5\nleanup install --force\n</code></pre>"},{"location":"zh/getting-started/quickstart/#_5","title":"\u7ba1\u7406\u5de5\u5177\u94fe","text":"<pre><code># \u4ee3\u7406\u6267\u884c elan \u547d\u4ee4\nleanup elan --help\nleanup elan toolchain list\nleanup elan toolchain install stable\nleanup elan default stable\n</code></pre>"},{"location":"zh/getting-started/quickstart/#_6","title":"\u4ed3\u5e93\u7ba1\u7406","text":"<pre><code># \u5b89\u88c5\u4ed3\u5e93\nleanup repo install mathlib4\n\n# \u4f7f\u7528\u4ea4\u4e92\u5f0f\u914d\u7f6e\u5b89\u88c5\nleanup repo install mathlib4 --interactive\n\n# \u4ece\u7279\u5b9a\u6e90\u5b89\u88c5\nleanup repo install mathlib4 --source github\n\n# \u4ece URL \u5b89\u88c5\nleanup repo install --url https://github.com/leanprover-community/mathlib4.git\n\n# \u5217\u51fa\u5df2\u5b89\u88c5\u7684\u4ed3\u5e93\nleanup repo list\n</code></pre>"},{"location":"zh/getting-started/quickstart/#repomanager","title":"\u4f7f\u7528 RepoManager","text":"<p><code>RepoManager</code> \u7c7b\u63d0\u4f9b\u4e86\u7ba1\u7406\u76ee\u5f55\u548c git \u4ed3\u5e93\u7684\u529f\u80fd\uff1a</p> <pre><code>from leanup.repo import RepoManager\n\n# \u521d\u59cb\u5316\u4e00\u4e2a\u76ee\u5f55\u7ba1\u7406\u5668\nrepo = RepoManager(\"/path/to/your/directory\")\n\n# \u68c0\u67e5\u662f\u5426\u4e3agit\u4ed3\u5e93\nif repo.is_gitrepo:\n    print(\"\u8fd9\u662f\u4e00\u4e2agit\u4ed3\u5e93\")\n    status = repo.git_status()\n    print(f\"\u5f53\u524d\u5206\u652f: {status['branch']}\")\nelse:\n    print(\"\u8fd9\u4e0d\u662f\u4e00\u4e2agit\u4ed3\u5e93\")\n\n# \u514b\u9686\u4ed3\u5e93\nrepo.clone_from(\"https://github.com/user/repo.git\")\n\n# \u8bfb\u53d6\u6587\u4ef6\ncontent = repo.read_file(\"README.md\")\n\n# \u5199\u5165\u6587\u4ef6\nrepo.write_file(\"test.txt\", \"Hello World\")\n\n# \u6267\u884c\u547d\u4ee4\nresult = repo.execute_command([\"ls\", \"-la\"])\n</code></pre>"},{"location":"zh/getting-started/quickstart/#leanrepo","title":"\u4f7f\u7528 LeanRepo","text":"<p><code>LeanRepo</code> \u7c7b\u4e13\u95e8\u7528\u4e8e Lean \u9879\u76ee\u7ba1\u7406\uff1a</p> <pre><code>from leanup.repo import LeanRepo\n\n# \u521d\u59cb\u5316 Lean \u9879\u76ee\u7ba1\u7406\u5668\nlean_repo = LeanRepo(\"/path/to/lean/project\")\n\n# \u83b7\u53d6 Lean \u5de5\u5177\u94fe\u7248\u672c\ntoolchain = lean_repo.get_lean_toolchain()\nprint(f\"Lean \u5de5\u5177\u94fe: {toolchain}\")\n\n# \u6267\u884c lake \u547d\u4ee4\nlean_repo.lake_update()\nlean_repo.lake_build()\n\n# \u6267\u884c\u81ea\u5b9a\u4e49 lake \u547d\u4ee4\nresult = lean_repo.lake([\"build\", \"MyPackage\"])\n</code></pre>"}]}